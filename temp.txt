Automating Lambda Provisioned Concurrency Using Runbooks

1. What is a Runbook and Systems Manager Automation?

A Runbook in AWS Systems Manager Automation is a predefined workflow of steps used to perform routine IT tasks or

complex operations. Systems Manager Automation enables you to safely and repeatedly automate operational tasks

using runbooks without requiring human intervention.

2. Common Uses of Runbooks

Runbooks are commonly used for:

- Patching instances

- Restarting services

- Rotating secrets

- Managing backups

- Provisioning or deprovisioning resources

- Automating AWS service configurations such as Lambda concurrency

3. Our Use Case: Lambda Provisioned Concurrency

We use a custom runbook to automate setting provisioned concurrency for AWS Lambda functions. This ensures the

function can handle predictable traffic spikes without facing cold starts. EventBridge Scheduler triggers the runbook

based on known peak and off-peak hours.

4. Understanding Lambda Cold Start Issue

Cold starts occur when AWS Lambda needs to initialize a new execution environment before running your function. This

can lead to high latency especially when functions are idle for long or are frequently invoked during peak loads. For

user-facing APIs or critical services, this latency is unacceptable.

5. Our Solution to Cold Starts

We mitigate cold start delays by setting 'Provisioned Concurrency' on a Lambda alias using a custom runbook. This

pre-warms Lambda execution environments, making them instantly available. The concurrency is increased before peak

hours and reduced afterward, optimizing cost and performance.

6. Implementation Steps

1. Create a custom SSM Automation runbook that calls 'put-provisioned-concurrency-config'

2. Define inputs: FunctionName, Alias, ProvisionedCount

3. Create an IAM role for EventBridge Scheduler to start automation

4. Schedule two EventBridge Scheduler rules:

 - One to increase concurrency (e.g., at 11:00 AM IST)

 - One to decrease concurrency (e.g., at 07:00 PM IST)

5. Pass constant JSON input to the scheduler, like:

 {

 "FunctionName": "my-lambda-function",

 "Alias": "prod",

 "ProvisionedCount": "5"

 }

Automating Lambda Provisioned Concurrency Using Runbooks

7. Future Scope and Improvements

- Implement dynamic concurrency scaling using CloudWatch metrics (RequestCount, Duration, Throttles)

- Integrate alerts for failed executions using SNS

- Use Parameter Store to manage peak hours centrally

- Extend support to scale multiple Lambda functions together

- Track concurrency effectiveness with custom metrics
